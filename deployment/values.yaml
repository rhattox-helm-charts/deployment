deployment:
  enabled: true
  name: "example"

  replicas: 1

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

  progressDeadlineSeconds: 600
  revisionHistoryLimit: 5

  securityContext:
    runAsNonRoot: true
    runAsUser: 1000

  initContainers:
    enabled: false
    configs:
      - name: nginx-example
        image:
          repository: "nginx"
          tag: "1.21.6"
          pullPolicy: IfNotPresent
        volumeMounts:
          enabled: false
          configs:
            - name: data-volume
              mountPath: /data

  containers:
    enabled: false
    configs:
      - name: nginx-example

        securityContext:
          allowPrivilegeEscalation: false

        image:
          repository: "nginx"
          tag: "1.21.6"
          pullPolicy: IfNotPresent

        volumeMounts:
          enabled: false
          configs:
            - name: data-volume
              mountPath: /data

        ports:
          enabled: false
          configs:
            - containerPort: 80

        env:
          enabled: false
          configs:
            - name: LOG_LEVEL
              value: "debug"

        envFrom:
          enabled: false
          configs:
            - configMapRef:
                name: example-config
            - secretRef:
                name: example-secret

        resources:
          enabled: false
          configs:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"

        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10

        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 2
          periodSeconds: 5

  volumes:
    enabled: false
    configs:
      - name: example-data-volume
        emptyDir: {}
